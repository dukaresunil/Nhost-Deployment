"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const d=require("@apollo/client/core"),I=require("@apollo/client/link/context"),M=require("@apollo/client/link/subscriptions"),P=require("@apollo/client/utilities"),G=require("jwt-decode"),V=require("graphql-ws");function W(n){let c=!1,a=()=>{c=!0},p=!1,u,h;const m=V.createClient({...n,on:{...n.on,error:i=>{var t,l;console.error(i),(l=(t=n.on)==null?void 0:t.error)==null||l.call(t,i),a()},ping:i=>{i||(h=setTimeout(()=>{m.terminate(),a()},5e3))},pong:i=>{i&&clearTimeout(h)},opened:i=>{var t,l;u=i,(l=(t=n.on)==null?void 0:t.opened)==null||l.call(t,u),p=!0,a=()=>{u.readyState===WebSocket.OPEN?u.close(4205,"Client Restart"):c=!0},c&&(c=!1,a())},closed:i=>{var t,l;(l=(t=n==null?void 0:n.on)==null?void 0:t.closed)==null||l.call(t,i),p=!1}}});return{...m,restart:()=>a(),isOpen:()=>p}}const b=typeof window!="undefined",H=({nhost:n,graphqlUrl:c,headers:a={},publicRole:p="public",fetchPolicy:u,cache:h=new d.InMemoryCache,connectToDevTools:m=b&&process.env.NODE_ENV==="development",onError:i,link:t,generateLinks:l})=>{const D=c||(n==null?void 0:n.graphql.httpUrl);if(!D)throw Error("Can't initialize the Apollo Client: no backend Url has been provided");const y=D,k=n==null?void 0:n.auth.client.interpreter;let e=null;const q=()=>{if(!(e!=null&&e.value))return!1;const o=3*1e3;return G.jwtDecode(e.value).exp*1e3>Date.now()-o},C=()=>!!(e!=null&&e.value)&&!!(e!=null&&e.expiresAt)&&(e==null?void 0:e.expiresAt)>new Date&&q(),N=()=>!e||C(),v=()=>{if(N())return Promise.resolve();const r=()=>N()?Promise.resolve(!0):new Promise(o=>{setTimeout(()=>r().then(o),100)});return r()},g=async()=>{await v();const r={...a,"Sec-WebSocket-Protocol":"graphql-ws"};return e?r.authorization=`Bearer ${e.value}`:r.role=p,r},s=b?W({url:y.startsWith("https")?y.replace(/^https/,"wss"):y.replace(/^http/,"ws"),shouldRetry:()=>!0,retryAttempts:100,retryWait:async r=>new Promise(O=>setTimeout(O,1e3*Math.pow(2,r)+Math.floor(Math.random()*3e3))),connectionParams:async()=>({headers:{...a,...await g()}})}):null,S=s?new M.GraphQLWsLink(s):null,A=I.setContext(async(r,{headers:o})=>({headers:{...o,...await g()}})).concat(d.createHttpLink({uri:y})),x=S?d.split(({query:r})=>{const o=P.getMainDefinition(r),{kind:w}=o;let O;return"operation"in o&&(O=o.operation),w==="OperationDefinition"&&O==="subscription"},S,A):A,f=[];i&&f.push(i),t&&f.push(t),f.push(x);const E=d.from(l?l(f):f),T=new d.ApolloClient({cache:h||new d.InMemoryCache,ssrMode:!b,defaultOptions:{watchQuery:{fetchPolicy:u}},connectToDevTools:m,link:E});return k==null||k.onTransition(async(r,o)=>{if(["SIGNOUT","SIGNED_IN","TOKEN_CHANGED"].includes(o.type)){if(o.type==="SIGNOUT"||o.type==="TOKEN_CHANGED"&&r.context.accessToken.value===null){e=null;try{await T.resetStore()}catch(w){console.error("Error resetting Apollo client cache"),console.error(w)}return}if(e=r.context.accessToken,!b||!(s!=null&&s.isOpen()))return;s==null||s.restart()}}),T};exports.createApolloClient=H;
//# sourceMappingURL=index.cjs.js.map
