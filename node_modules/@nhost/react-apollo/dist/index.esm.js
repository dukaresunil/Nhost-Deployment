import { useQuery as u, useSubscription as i, ApolloClient as l, InMemoryCache as o, ApolloProvider as s } from "@apollo/client";
import { useAuthenticated as n } from "@nhost/react";
import m, { useState as A, useEffect as a } from "react";
import { createApolloClient as f } from "@nhost/apollo";
function w(r, e) {
  const t = n(), c = { ...e, skip: (e == null ? void 0 : e.skip) || !t };
  return u(r, c);
}
function y(r, e) {
  const t = n(), c = {
    ...e,
    skip: (e == null ? void 0 : e.skip) || !t
  };
  return i(r, c);
}
const h = new l({ cache: new o() }), S = ({
  children: r,
  ...e
}) => {
  const [t, c] = A();
  return a(() => {
    t || c(f(e));
  }, [t, e]), /* @__PURE__ */ m.createElement(s, { client: t || h }, r);
};
export {
  S as NhostApolloProvider,
  w as useAuthQuery,
  y as useAuthSubscription
};
//# sourceMappingURL=index.esm.js.map
